mkdir src
cd src
dotnet new sln --name [solution name]
mkdir services
dotnet new webapi --name Catalog.API
cd ..
dotnet sln .\dotnetrun-microservices.sln add  .\services\Catalog.API\Catalog.API.csproj
https://hub.docker.com/
Search mongo ( docker pull mongo )
docker run -d -p 27017:27017 --name shopping-mongo mongo
docker ps
docker logs -f shopping-mongo
docker exec -it shopping-mongo /bin/bash
mongo
show dbs
use CatalogDB
db.createCollection('Products')
db.Products.insertMany(
    [
        {
            'Name': 'Asus Laptop',
            'Category': 'Computers',
            'Summary':'Summary',
            'Description':'Description',
            'ImageFile':'ImageFile',
            'Price': 56.95
        },
        {
            'Name': 'HP Laptop',
            'Category': 'Computers',
            'Summary':'Summary',
            'Description':'Description',
            'ImageFile':'ImageFile',
            'Price': 89.95
        }
    ]
)
db.Products.find({}).pretty();
db.Products.remove({})
show collections

https://www.nuget.org/
MongoDB.Driver ( dotnet add package MongoDB.Driver )

"DatabaseSettings":{
    "ConnectionString":"mongodb://localhost:27017",
    "DatabaseName":"ProductDB",
    "CollectionName":"Products"
  },

docker build -t kannansdocker/catalogapi .
docker run -p 8080:80 kannansdocker/catalogapi

============================================================================
dotnet new webapi --name Basket.API
cd ..
dotnet sln .\dotnetrun-microservices.sln add .\services\Basket.API\Basket.API.csproj

https://hub.docker.com/_/redis
docker pull redis
docker run -d -p 6379:6379 --name aspnetrun-redis redis

https://hub.docker.com/r/redislabs/redisinsight

docker exec -it aspnetrun-redis /bin/bash
redis-cli
set [key] [value]
get [key]
https://www.nuget.org/packages/Microsoft.Extensions.Caching.StackExchangeRedis/6.0.0-preview.5.21301.17
dotnet add package Microsoft.Extensions.Caching.StackExchangeRedis
https://www.nuget.org/packages/Newtonsoft.Json/
dotnet add package Newtonsoft.Json

> Nuget Package Manager GUI (on panel)

"CacheSettings": {
    "ConnectionString": "localhost:6379"
}

docker run -v redisinsight:/db -p 8001:8001 redislabs/redisinsight:latest

============================================================================
dotnet new webapi --name Discount.API
dotnet sln .\dotnetrun-microservices.sln add .\services\Discount\Discount.API\Discount.API.csproj
https://hub.docker.com/_/postgres
docker pull postgres

https://hub.docker.com/r/dpage/pgadmin4
Doc: https://www.pgadmin.org/docs/pgadmin4/latest/index.html

CREATE TABLE Coupon(
	ID SERIAL PRIMARY KEY NOT NULL,
	ProductName VARCHAR(50) NOT NULL,
	Description TEXT,
	Amount INT
)

----------------------------------------------------
dotnet new grpc --name Discount.Grpc
dotnet sln .\dotnetrun-microservices.sln add .\services\Discounts\Discount.Grpc\Discount.Grpc.csproj


